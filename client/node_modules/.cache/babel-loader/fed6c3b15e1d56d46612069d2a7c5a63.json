{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport sessionsService from \"./sessionsService\";\nconst initialState = {\n  trainingSession: {\n    title: \"\",\n    description: \"\"\n  },\n  sessionBank: [],\n  trainingPlan: [],\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: \"\"\n};\nexport const getSessions = createAsyncThunk(\"sessions/get\", async thunkAPI => {\n  try {\n    const token = thunkAPI.getState().auth.user.token;\n    return await sessionsService.getSessions(token);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const addSession = createAsyncThunk(\"sessions/add\", async (sessionData, thunkAPI) => {\n  try {\n    const token = thunkAPI.getState().auth.user.token;\n    return await sessionsService.addSession(sessionData, token);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const sessionsSlice = createSlice({\n  name: \"sessions\",\n  initialState,\n  reducers: {\n    reset: state => initialState,\n    addSessionToBank: (state, action) => {\n      state.trainingSessionsBank = [...state.trainingSessionsBank, { ...action.payload,\n        id: uuidv4(),\n        index: state.trainingSessionsBank.length\n      }];\n    },\n    removeSessionFromBank: (state, action) => {\n      state.trainingSessionsBank = state.trainingSessionsBank.filter(session => session.id !== action.payload);\n    },\n    addSessionToPlan: (state, action) => {\n      state.trainingSessionsBank = state.trainingSessionsBank.filter(session => session.id !== action.payload.id);\n      state.trainingPlan = [...state.trainingPlan, action.payload];\n    },\n    removeSessionFromPlan: (state, action) => {\n      state.trainingPlan = state.trainingPlan.filter(session => session.id !== action.payload.id);\n      state.trainingSessionsBank = [...state.trainingSessionsBank, action.payload];\n    },\n    changeCurrentSession: (state, action) => {\n      const {\n        key,\n        value\n      } = action.payload;\n      state.trainingSession = { ...state.trainingSession,\n        [key]: value\n      };\n    },\n    clearTrainingPlan: state => {\n      state.trainingSessionsBank = [...state.trainingSessionsBank, ...state.trainingPlan];\n      state.trainingPlan = [];\n    },\n    dragSession: (state, action) => {\n      const {\n        sourceId,\n        sourceIndex,\n        destinationIndex,\n        destinationId\n      } = action.payload;\n\n      if (sourceId === \"training-plan-key\") {\n        const removedSession = state.trainingPlan.splice(sourceIndex, 1);\n\n        if (destinationId === \"training-plan-key\") {\n          state.trainingPlan.splice(destinationIndex, 0, ...removedSession);\n        } else {\n          state.trainingSessionsBank.splice(destinationIndex, 0, ...removedSession);\n        }\n      } else {\n        const removedSession = state.trainingSessionsBank.splice(sourceIndex, 1);\n\n        if (destinationId === \"training-plan-key\") {\n          state.trainingPlan.splice(destinationIndex, 0, ...removedSession);\n        } else {\n          state.trainingSessionsBank.splice(destinationIndex, 0, ...removedSession);\n        }\n      }\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(getSessions.pending, state => {\n      state.isLoading = true;\n    }).addCase(getSessions.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      const sessions = action.payload;\n      state.trainingSessionsBank = sessions.filter(session => !session.inPlan);\n      state.trainingPlan = sessions.filter(session => session.inPlan);\n    }).addCase(getSessions.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    }).addCase(addSession.pending, state => {\n      state.isLoading = true;\n    }).addCase(addSession.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.sessionBank.push(action.payload);\n    }).addCase(addSession.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    });\n  }\n});\nexport const currentSession = state => state.sessions.trainingSession;\nexport const sessionBank = state => state.sessions.sessionBank;\nexport const sessionPlan = state => state.sessions.trainingPlan;\nexport const {\n  addSessionToBank,\n  removeSessionFromBank,\n  addSessionToPlan,\n  removeSessionFromPlan,\n  changeCurrentSession,\n  clearTrainingPlan,\n  dragSession,\n  reset\n} = sessionsSlice.actions;\nexport default sessionsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","v4","uuidv4","sessionsService","initialState","trainingSession","title","description","sessionBank","trainingPlan","isError","isSuccess","isLoading","message","getSessions","thunkAPI","token","getState","auth","user","error","response","data","toString","rejectWithValue","addSession","sessionData","sessionsSlice","name","reducers","reset","state","addSessionToBank","action","trainingSessionsBank","payload","id","index","length","removeSessionFromBank","filter","session","addSessionToPlan","removeSessionFromPlan","changeCurrentSession","key","value","clearTrainingPlan","dragSession","sourceId","sourceIndex","destinationIndex","destinationId","removedSession","splice","extraReducers","builder","addCase","pending","fulfilled","sessions","inPlan","rejected","push","currentSession","sessionPlan","actions","reducer"],"sources":["/home/yanay/projects/novos/training-plan/client/src/redux/sessions/sessionsSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport sessionsService from \"./sessionsService\";\n\nconst initialState = {\n  trainingSession: {\n    title: \"\",\n    description: \"\",\n  },\n  sessionBank: [],\n  trainingPlan: [],\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: \"\",\n};\n\nexport const getSessions = createAsyncThunk(\n  \"sessions/get\",\n  async (thunkAPI) => {\n    try {\n      const token = thunkAPI.getState().auth.user.token;\n      return await sessionsService.getSessions(token);\n    } catch (error) {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n      return thunkAPI.rejectWithValue(message);\n    }\n  }\n);\n\nexport const addSession = createAsyncThunk(\n  \"sessions/add\",\n  async (sessionData, thunkAPI) => {\n    try {\n      const token = thunkAPI.getState().auth.user.token;\n      return await sessionsService.addSession(sessionData, token);\n    } catch (error) {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n      return thunkAPI.rejectWithValue(message);\n    }\n  }\n);\n\nexport const sessionsSlice = createSlice({\n  name: \"sessions\",\n  initialState,\n  reducers: {\n    reset: (state) => initialState,\n    addSessionToBank: (state, action) => {\n      state.trainingSessionsBank = [\n        ...state.trainingSessionsBank,\n        {\n          ...action.payload,\n          id: uuidv4(),\n          index: state.trainingSessionsBank.length,\n        },\n      ];\n    },\n    removeSessionFromBank: (state, action) => {\n      state.trainingSessionsBank = state.trainingSessionsBank.filter(\n        (session) => session.id !== action.payload\n      );\n    },\n    addSessionToPlan: (state, action) => {\n      state.trainingSessionsBank = state.trainingSessionsBank.filter(\n        (session) => session.id !== action.payload.id\n      );\n      state.trainingPlan = [...state.trainingPlan, action.payload];\n    },\n    removeSessionFromPlan: (state, action) => {\n      state.trainingPlan = state.trainingPlan.filter(\n        (session) => session.id !== action.payload.id\n      );\n      state.trainingSessionsBank = [\n        ...state.trainingSessionsBank,\n        action.payload,\n      ];\n    },\n    changeCurrentSession: (state, action) => {\n      const { key, value } = action.payload;\n      state.trainingSession = { ...state.trainingSession, [key]: value };\n    },\n    clearTrainingPlan: (state) => {\n      state.trainingSessionsBank = [\n        ...state.trainingSessionsBank,\n        ...state.trainingPlan,\n      ];\n      state.trainingPlan = [];\n    },\n    dragSession: (state, action) => {\n      const { sourceId, sourceIndex, destinationIndex, destinationId } =\n        action.payload;\n      if (sourceId === \"training-plan-key\") {\n        const removedSession = state.trainingPlan.splice(sourceIndex, 1);\n        if (destinationId === \"training-plan-key\") {\n          state.trainingPlan.splice(destinationIndex, 0, ...removedSession);\n        } else {\n          state.trainingSessionsBank.splice(\n            destinationIndex,\n            0,\n            ...removedSession\n          );\n        }\n      } else {\n        const removedSession = state.trainingSessionsBank.splice(\n          sourceIndex,\n          1\n        );\n        if (destinationId === \"training-plan-key\") {\n          state.trainingPlan.splice(destinationIndex, 0, ...removedSession);\n        } else {\n          state.trainingSessionsBank.splice(\n            destinationIndex,\n            0,\n            ...removedSession\n          );\n        }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getSessions.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(getSessions.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.isSuccess = true;\n        const sessions = action.payload;\n        state.trainingSessionsBank = sessions.filter(\n          (session) => !session.inPlan\n        );\n        state.trainingPlan = sessions.filter((session) => session.inPlan);\n      })\n      .addCase(getSessions.rejected, (state, action) => {\n        state.isLoading = false;\n        state.isError = true;\n        state.message = action.payload;\n      })\n      .addCase(addSession.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(addSession.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.isSuccess = true;\n        state.sessionBank.push(action.payload);\n      })\n      .addCase(addSession.rejected, (state, action) => {\n        state.isLoading = false;\n        state.isError = true;\n        state.message = action.payload;\n      });\n  },\n});\n\nexport const currentSession = (state) => state.sessions.trainingSession;\nexport const sessionBank = (state) => state.sessions.sessionBank;\nexport const sessionPlan = (state) => state.sessions.trainingPlan;\n\nexport const {\n  addSessionToBank,\n  removeSessionFromBank,\n  addSessionToPlan,\n  removeSessionFromPlan,\n  changeCurrentSession,\n  clearTrainingPlan,\n  dragSession,\n  reset,\n} = sessionsSlice.actions;\n\nexport default sessionsSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}