{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport authService from \"./authService\";\nconst user = JSON.parse(localStorage.getItem(\"user\"));\nconst initialState = {\n  user: user !== null && user !== void 0 ? user : null,\n  isError: false,\n  isSuccess: false,\n  message: \"\"\n};\nexport const register = createAsyncThunk(\"auth/register\", async (user, thunkAPI) => {\n  try {\n    return await authService.register(user);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n  }\n});\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    reset: state => {\n      state.isError = false;\n      state.isSuccess = false;\n      state.message = \"\";\n    }\n  },\n  extraReducers: () => {}\n});\nexport const {\n  reset\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","authService","user","JSON","parse","localStorage","getItem","initialState","isError","isSuccess","message","register","thunkAPI","error","response","data","toString","authSlice","name","reducers","reset","state","extraReducers","actions","reducer"],"sources":["/home/yanay/projects/novos/training-plan/client/src/redux/auth/authSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport authService from \"./authService\";\n\nconst user = JSON.parse(localStorage.getItem(\"user\"));\n\nconst initialState = {\n  user: user ?? null,\n  isError: false,\n  isSuccess: false,\n  message: \"\",\n};\n\nexport const register = createAsyncThunk(\n  \"auth/register\",\n  async (user, thunkAPI) => {\n    try {\n      return await authService.register(user);\n    } catch (error) {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n    }\n  }\n);\n\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    reset: (state) => {\n      state.isError = false;\n      state.isSuccess = false;\n      state.message = \"\";\n    },\n  },\n  extraReducers: () => {},\n});\n\nexport const { reset } = authSlice.actions;\n\nexport default authSlice.reducer;\n"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAb;AAEA,MAAMC,YAAY,GAAG;EACnBL,IAAI,EAAEA,IAAF,aAAEA,IAAF,cAAEA,IAAF,GAAU,IADK;EAEnBM,OAAO,EAAE,KAFU;EAGnBC,SAAS,EAAE,KAHQ;EAInBC,OAAO,EAAE;AAJU,CAArB;AAOA,OAAO,MAAMC,QAAQ,GAAGZ,gBAAgB,CACtC,eADsC,EAEtC,OAAOG,IAAP,EAAaU,QAAb,KAA0B;EACxB,IAAI;IACF,OAAO,MAAMX,WAAW,CAACU,QAAZ,CAAqBT,IAArB,CAAb;EACD,CAFD,CAEE,OAAOW,KAAP,EAAc;IACd,MAAMH,OAAO,GACVG,KAAK,CAACC,QAAN,IACCD,KAAK,CAACC,QAAN,CAAeC,IADhB,IAECF,KAAK,CAACC,QAAN,CAAeC,IAAf,CAAoBL,OAFtB,IAGAG,KAAK,CAACH,OAHN,IAIAG,KAAK,CAACG,QAAN,EALF;EAMD;AACF,CAbqC,CAAjC;AAgBP,OAAO,MAAMC,SAAS,GAAGjB,WAAW,CAAC;EACnCkB,IAAI,EAAE,MAD6B;EAEnCX,YAFmC;EAGnCY,QAAQ,EAAE;IACRC,KAAK,EAAGC,KAAD,IAAW;MAChBA,KAAK,CAACb,OAAN,GAAgB,KAAhB;MACAa,KAAK,CAACZ,SAAN,GAAkB,KAAlB;MACAY,KAAK,CAACX,OAAN,GAAgB,EAAhB;IACD;EALO,CAHyB;EAUnCY,aAAa,EAAE,MAAM,CAAE;AAVY,CAAD,CAA7B;AAaP,OAAO,MAAM;EAAEF;AAAF,IAAYH,SAAS,CAACM,OAA5B;AAEP,eAAeN,SAAS,CAACO,OAAzB"},"metadata":{},"sourceType":"module"}