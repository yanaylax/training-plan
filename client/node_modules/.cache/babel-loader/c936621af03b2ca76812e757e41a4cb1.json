{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport sessionsService from \"./sessionsService\";\nconst initialState = {\n  trainingSession: {\n    title: \"\",\n    description: \"\"\n  },\n  trainingSessionsBank: [],\n  trainingPlan: [],\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: \"\"\n};\nexport const getSessions = createAsyncThunk(\"api/sessions\", async thunkAPI => {\n  try {\n    return await sessionsService.getSessions();\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const sessionsSlice = createSlice({\n  name: \"sessions\",\n  initialState,\n  reducers: {\n    reset: state => initialState,\n    addSessionToBank: (state, action) => {\n      state.trainingSessionsBank = [...state.trainingSessionsBank, { ...action.payload,\n        id: uuidv4(),\n        index: state.trainingSessionsBank.length\n      }];\n    },\n    removeSessionFromBank: (state, action) => {\n      state.trainingSessionsBank = state.trainingSessionsBank.filter(session => session.id !== action.payload);\n    },\n    addSessionToPlan: (state, action) => {\n      state.trainingSessionsBank = state.trainingSessionsBank.filter(session => session.id !== action.payload.id);\n      state.trainingPlan = [...state.trainingPlan, action.payload];\n    },\n    removeSessionFromPlan: (state, action) => {\n      state.trainingPlan = state.trainingPlan.filter(session => session.id !== action.payload.id);\n      state.trainingSessionsBank = [...state.trainingSessionsBank, action.payload];\n    },\n    changeCurrentSession: (state, action) => {\n      const {\n        key,\n        value\n      } = action.payload;\n      state.trainingSession = { ...state.trainingSession,\n        [key]: value\n      };\n    },\n    clearTrainingPlan: state => {\n      state.trainingSessionsBank = [...state.trainingSessionsBank, ...state.trainingPlan];\n      state.trainingPlan = [];\n    },\n    dragSession: (state, action) => {\n      const {\n        sourceId,\n        sourceIndex,\n        destinationIndex,\n        destinationId\n      } = action.payload;\n\n      if (sourceId === \"training-plan-key\") {\n        const removedSession = state.trainingPlan.splice(sourceIndex, 1);\n\n        if (destinationId === \"training-plan-key\") {\n          state.trainingPlan.splice(destinationIndex, 0, ...removedSession);\n        } else {\n          state.trainingSessionsBank.splice(destinationIndex, 0, ...removedSession);\n        }\n      } else {\n        const removedSession = state.trainingSessionsBank.splice(sourceIndex, 1);\n\n        if (destinationId === \"training-plan-key\") {\n          state.trainingPlan.splice(destinationIndex, 0, ...removedSession);\n        } else {\n          state.trainingSessionsBank.splice(destinationIndex, 0, ...removedSession);\n        }\n      }\n    }\n  }\n});\nexport const currentSession = state => state.sessions.trainingSession;\nexport const sessionBank = state => state.sessions.trainingSessionsBank;\nexport const sessionPlan = state => state.sessions.trainingPlan;\nexport const {\n  addSessionToBank,\n  removeSessionFromBank,\n  addSessionToPlan,\n  removeSessionFromPlan,\n  changeCurrentSession,\n  clearTrainingPlan,\n  dragSession,\n  reset\n} = sessionsSlice.actions;\nexport default sessionsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","v4","uuidv4","sessionsService","initialState","trainingSession","title","description","trainingSessionsBank","trainingPlan","isError","isSuccess","isLoading","message","getSessions","thunkAPI","error","response","data","toString","rejectWithValue","sessionsSlice","name","reducers","reset","state","addSessionToBank","action","payload","id","index","length","removeSessionFromBank","filter","session","addSessionToPlan","removeSessionFromPlan","changeCurrentSession","key","value","clearTrainingPlan","dragSession","sourceId","sourceIndex","destinationIndex","destinationId","removedSession","splice","currentSession","sessions","sessionBank","sessionPlan","actions","reducer"],"sources":["/home/yanay/projects/novos/training-plan/client/src/redux/sessions/sessionsSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport sessionsService from \"./sessionsService\";\n\nconst initialState = {\n  trainingSession: {\n    title: \"\",\n    description: \"\",\n  },\n  trainingSessionsBank: [],\n  trainingPlan: [],\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: \"\",\n};\n\nexport const getSessions = createAsyncThunk(\n  \"api/sessions\",\n  async (thunkAPI) => {\n    try {\n      return await sessionsService.getSessions();\n    } catch (error) {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n      return thunkAPI.rejectWithValue(message);\n    }\n  }\n);\n\nexport const sessionsSlice = createSlice({\n  name: \"sessions\",\n  initialState,\n  reducers: {\n    reset: (state) => initialState,\n    addSessionToBank: (state, action) => {\n      state.trainingSessionsBank = [\n        ...state.trainingSessionsBank,\n        {\n          ...action.payload,\n          id: uuidv4(),\n          index: state.trainingSessionsBank.length,\n        },\n      ];\n    },\n    removeSessionFromBank: (state, action) => {\n      state.trainingSessionsBank = state.trainingSessionsBank.filter(\n        (session) => session.id !== action.payload\n      );\n    },\n    addSessionToPlan: (state, action) => {\n      state.trainingSessionsBank = state.trainingSessionsBank.filter(\n        (session) => session.id !== action.payload.id\n      );\n      state.trainingPlan = [...state.trainingPlan, action.payload];\n    },\n    removeSessionFromPlan: (state, action) => {\n      state.trainingPlan = state.trainingPlan.filter(\n        (session) => session.id !== action.payload.id\n      );\n      state.trainingSessionsBank = [\n        ...state.trainingSessionsBank,\n        action.payload,\n      ];\n    },\n    changeCurrentSession: (state, action) => {\n      const { key, value } = action.payload;\n      state.trainingSession = { ...state.trainingSession, [key]: value };\n    },\n    clearTrainingPlan: (state) => {\n      state.trainingSessionsBank = [\n        ...state.trainingSessionsBank,\n        ...state.trainingPlan,\n      ];\n      state.trainingPlan = [];\n    },\n    dragSession: (state, action) => {\n      const { sourceId, sourceIndex, destinationIndex, destinationId } =\n        action.payload;\n      if (sourceId === \"training-plan-key\") {\n        const removedSession = state.trainingPlan.splice(sourceIndex, 1);\n        if (destinationId === \"training-plan-key\") {\n          state.trainingPlan.splice(destinationIndex, 0, ...removedSession);\n        } else {\n          state.trainingSessionsBank.splice(\n            destinationIndex,\n            0,\n            ...removedSession\n          );\n        }\n      } else {\n        const removedSession = state.trainingSessionsBank.splice(\n          sourceIndex,\n          1\n        );\n        if (destinationId === \"training-plan-key\") {\n          state.trainingPlan.splice(destinationIndex, 0, ...removedSession);\n        } else {\n          state.trainingSessionsBank.splice(\n            destinationIndex,\n            0,\n            ...removedSession\n          );\n        }\n      }\n    },\n  },\n});\n\nexport const currentSession = (state) => state.sessions.trainingSession;\nexport const sessionBank = (state) => state.sessions.trainingSessionsBank;\nexport const sessionPlan = (state) => state.sessions.trainingPlan;\n\nexport const {\n  addSessionToBank,\n  removeSessionFromBank,\n  addSessionToPlan,\n  removeSessionFromPlan,\n  changeCurrentSession,\n  clearTrainingPlan,\n  dragSession,\n  reset,\n} = sessionsSlice.actions;\n\nexport default sessionsSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AAEA,MAAMC,YAAY,GAAG;EACnBC,eAAe,EAAE;IACfC,KAAK,EAAE,EADQ;IAEfC,WAAW,EAAE;EAFE,CADE;EAKnBC,oBAAoB,EAAE,EALH;EAMnBC,YAAY,EAAE,EANK;EAOnBC,OAAO,EAAE,KAPU;EAQnBC,SAAS,EAAE,KARQ;EASnBC,SAAS,EAAE,KATQ;EAUnBC,OAAO,EAAE;AAVU,CAArB;AAaA,OAAO,MAAMC,WAAW,GAAGd,gBAAgB,CACzC,cADyC,EAEzC,MAAOe,QAAP,IAAoB;EAClB,IAAI;IACF,OAAO,MAAMZ,eAAe,CAACW,WAAhB,EAAb;EACD,CAFD,CAEE,OAAOE,KAAP,EAAc;IACd,MAAMH,OAAO,GACVG,KAAK,CAACC,QAAN,IACCD,KAAK,CAACC,QAAN,CAAeC,IADhB,IAECF,KAAK,CAACC,QAAN,CAAeC,IAAf,CAAoBL,OAFtB,IAGAG,KAAK,CAACH,OAHN,IAIAG,KAAK,CAACG,QAAN,EALF;IAMA,OAAOJ,QAAQ,CAACK,eAAT,CAAyBP,OAAzB,CAAP;EACD;AACF,CAdwC,CAApC;AAiBP,OAAO,MAAMQ,aAAa,GAAGtB,WAAW,CAAC;EACvCuB,IAAI,EAAE,UADiC;EAEvClB,YAFuC;EAGvCmB,QAAQ,EAAE;IACRC,KAAK,EAAGC,KAAD,IAAWrB,YADV;IAERsB,gBAAgB,EAAE,CAACD,KAAD,EAAQE,MAAR,KAAmB;MACnCF,KAAK,CAACjB,oBAAN,GAA6B,CAC3B,GAAGiB,KAAK,CAACjB,oBADkB,EAE3B,EACE,GAAGmB,MAAM,CAACC,OADZ;QAEEC,EAAE,EAAE3B,MAAM,EAFZ;QAGE4B,KAAK,EAAEL,KAAK,CAACjB,oBAAN,CAA2BuB;MAHpC,CAF2B,CAA7B;IAQD,CAXO;IAYRC,qBAAqB,EAAE,CAACP,KAAD,EAAQE,MAAR,KAAmB;MACxCF,KAAK,CAACjB,oBAAN,GAA6BiB,KAAK,CAACjB,oBAAN,CAA2ByB,MAA3B,CAC1BC,OAAD,IAAaA,OAAO,CAACL,EAAR,KAAeF,MAAM,CAACC,OADR,CAA7B;IAGD,CAhBO;IAiBRO,gBAAgB,EAAE,CAACV,KAAD,EAAQE,MAAR,KAAmB;MACnCF,KAAK,CAACjB,oBAAN,GAA6BiB,KAAK,CAACjB,oBAAN,CAA2ByB,MAA3B,CAC1BC,OAAD,IAAaA,OAAO,CAACL,EAAR,KAAeF,MAAM,CAACC,OAAP,CAAeC,EADhB,CAA7B;MAGAJ,KAAK,CAAChB,YAAN,GAAqB,CAAC,GAAGgB,KAAK,CAAChB,YAAV,EAAwBkB,MAAM,CAACC,OAA/B,CAArB;IACD,CAtBO;IAuBRQ,qBAAqB,EAAE,CAACX,KAAD,EAAQE,MAAR,KAAmB;MACxCF,KAAK,CAAChB,YAAN,GAAqBgB,KAAK,CAAChB,YAAN,CAAmBwB,MAAnB,CAClBC,OAAD,IAAaA,OAAO,CAACL,EAAR,KAAeF,MAAM,CAACC,OAAP,CAAeC,EADxB,CAArB;MAGAJ,KAAK,CAACjB,oBAAN,GAA6B,CAC3B,GAAGiB,KAAK,CAACjB,oBADkB,EAE3BmB,MAAM,CAACC,OAFoB,CAA7B;IAID,CA/BO;IAgCRS,oBAAoB,EAAE,CAACZ,KAAD,EAAQE,MAAR,KAAmB;MACvC,MAAM;QAAEW,GAAF;QAAOC;MAAP,IAAiBZ,MAAM,CAACC,OAA9B;MACAH,KAAK,CAACpB,eAAN,GAAwB,EAAE,GAAGoB,KAAK,CAACpB,eAAX;QAA4B,CAACiC,GAAD,GAAOC;MAAnC,CAAxB;IACD,CAnCO;IAoCRC,iBAAiB,EAAGf,KAAD,IAAW;MAC5BA,KAAK,CAACjB,oBAAN,GAA6B,CAC3B,GAAGiB,KAAK,CAACjB,oBADkB,EAE3B,GAAGiB,KAAK,CAAChB,YAFkB,CAA7B;MAIAgB,KAAK,CAAChB,YAAN,GAAqB,EAArB;IACD,CA1CO;IA2CRgC,WAAW,EAAE,CAAChB,KAAD,EAAQE,MAAR,KAAmB;MAC9B,MAAM;QAAEe,QAAF;QAAYC,WAAZ;QAAyBC,gBAAzB;QAA2CC;MAA3C,IACJlB,MAAM,CAACC,OADT;;MAEA,IAAIc,QAAQ,KAAK,mBAAjB,EAAsC;QACpC,MAAMI,cAAc,GAAGrB,KAAK,CAAChB,YAAN,CAAmBsC,MAAnB,CAA0BJ,WAA1B,EAAuC,CAAvC,CAAvB;;QACA,IAAIE,aAAa,KAAK,mBAAtB,EAA2C;UACzCpB,KAAK,CAAChB,YAAN,CAAmBsC,MAAnB,CAA0BH,gBAA1B,EAA4C,CAA5C,EAA+C,GAAGE,cAAlD;QACD,CAFD,MAEO;UACLrB,KAAK,CAACjB,oBAAN,CAA2BuC,MAA3B,CACEH,gBADF,EAEE,CAFF,EAGE,GAAGE,cAHL;QAKD;MACF,CAXD,MAWO;QACL,MAAMA,cAAc,GAAGrB,KAAK,CAACjB,oBAAN,CAA2BuC,MAA3B,CACrBJ,WADqB,EAErB,CAFqB,CAAvB;;QAIA,IAAIE,aAAa,KAAK,mBAAtB,EAA2C;UACzCpB,KAAK,CAAChB,YAAN,CAAmBsC,MAAnB,CAA0BH,gBAA1B,EAA4C,CAA5C,EAA+C,GAAGE,cAAlD;QACD,CAFD,MAEO;UACLrB,KAAK,CAACjB,oBAAN,CAA2BuC,MAA3B,CACEH,gBADF,EAEE,CAFF,EAGE,GAAGE,cAHL;QAKD;MACF;IACF;EAxEO;AAH6B,CAAD,CAAjC;AA+EP,OAAO,MAAME,cAAc,GAAIvB,KAAD,IAAWA,KAAK,CAACwB,QAAN,CAAe5C,eAAjD;AACP,OAAO,MAAM6C,WAAW,GAAIzB,KAAD,IAAWA,KAAK,CAACwB,QAAN,CAAezC,oBAA9C;AACP,OAAO,MAAM2C,WAAW,GAAI1B,KAAD,IAAWA,KAAK,CAACwB,QAAN,CAAexC,YAA9C;AAEP,OAAO,MAAM;EACXiB,gBADW;EAEXM,qBAFW;EAGXG,gBAHW;EAIXC,qBAJW;EAKXC,oBALW;EAMXG,iBANW;EAOXC,WAPW;EAQXjB;AARW,IASTH,aAAa,CAAC+B,OATX;AAWP,eAAe/B,aAAa,CAACgC,OAA7B"},"metadata":{},"sourceType":"module"}